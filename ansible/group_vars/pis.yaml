---
postgres_ca_key: "{{ lookup('ansible.builtin.unvault', './pki/postgres.pi.davejbax.co.uk.key.enc') }}"
postgres_ca_cert: "{{ lookup('ansible.builtin.file', './pki/postgres.pi.davejbax.co.uk.pem') }}"

postgres_cert_cn_prefix: "{{ k3s_role }}"
postgres_cert_owner: "{{ 'postgres' if k3s_role == 'server' else 'root' }}"
postgres_cert_group: "{{ 'postgres' if k3s_role == 'server' else 'root' }}"

postgres_configure_server: "{{ true if k3s_role == 'server' else false }}"
postgres_server_users:
  - name: kubernetes
    databases: [kubernetes]
    cns:
      - agent.postgres.pi.davejbax.co.uk
      - server.postgres.pi.davejbax.co.uk
postgres_server_bootstrap: >
  CREATE USER kubernetes;
  CREATE DATABASE kubernetes
    OWNER kubernetes;

k3s_release: 'v1.28.2+k3s1'
k3s_binary_name: 'k3s-arm64'
k3s_datastore_endpoint: 'postgres://kubernetes@localhost/kubernetes?sslmode=verify-ca&sslcert=/etc/postgresql/14/main/certs/client.pem&sslkey=/etc/postgresql/14/main/certs/client.key&sslrootcert=/etc/postgresql/14/main/certs/ca.pem'

k3s_cluster_cidr_v4: '10.0.0.0/16'
k3s_cluster_cidr_v6: 'fde6:addd:5088:0::/56'
k3s_service_cidr_v4: '10.1.0.0/16'
k3s_service_cidr_v6: 'fde6:addd:5088:1::/112'

k3s_addons:
  argo.yaml: |-
    apiVersion: v1
    kind: Namespace
    metadata:
      name: argocd
    ---
    apiVersion: helm.cattle.io/v1
    kind: HelmChart
    metadata:
      name: argocd
      namespace: kube-system
    spec:
      repo: https://argoproj.github.io/argo-helm
      chart: argo-cd
      targetNamespace: argocd
    ---
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: root
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      destination:
        namespace: argocd
        name: in-cluster
      project: default
      source:
        path: manifests/root
        repoURL: https://github.com/davejbax/home-pi-cluster.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true